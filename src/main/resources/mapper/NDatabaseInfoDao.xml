<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generate.NDatabaseInfoDao">
    <resultMap id="BaseResultMap" type="generate.NDatabaseInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="connect_name" jdbcType="VARCHAR" property="connectName"/>
        <result column="connect_address" jdbcType="VARCHAR" property="connectAddress"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, `name`, `type`, connect_name, connect_address, description
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from n_database_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from n_database_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="generate.NDatabaseInfo" useGeneratedKeys="true">
        insert into n_database_info (`name`, `type`, connect_name,
        connect_address, description)
        values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{connectName,jdbcType=VARCHAR},
        #{connectAddress,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="generate.NDatabaseInfo"
            useGeneratedKeys="true">
        insert into n_database_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="connectName != null">
                connect_name,
            </if>
            <if test="connectAddress != null">
                connect_address,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="connectName != null">
                #{connectName,jdbcType=VARCHAR},
            </if>
            <if test="connectAddress != null">
                #{connectAddress,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="generate.NDatabaseInfo">
        update n_database_info
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="connectName != null">
                connect_name = #{connectName,jdbcType=VARCHAR},
            </if>
            <if test="connectAddress != null">
                connect_address = #{connectAddress,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="generate.NDatabaseInfo">
        update n_database_info
        set `name` = #{name,jdbcType=VARCHAR},
        `type` = #{type,jdbcType=VARCHAR},
        connect_name = #{connectName,jdbcType=VARCHAR},
        connect_address = #{connectAddress,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>